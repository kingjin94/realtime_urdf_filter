<launch>
  <arg name="nodelet" default="false"/>
  <arg name="depth_in" default="/panda/depth_camera/depth_image"/>
  <arg name="depth_camera_info" default="/panda/depth_camera/depth_image/camera_info"/>
  <arg name="color_in" default="/panda/depth_camera/image"/>
  <arg name="depth_scale" default="1.0"/>
  
  <!-- Launch nodelet -->
  <node if="$(arg nodelet)" pkg="nodelet" type="nodelet" name="realtime_urtf_filter_nodelet" args="load realtime_urdf_filter/RealtimeURDFFilterNodelet camera_nodelet_manager" output="screen">
    <remap from="~input_depth" to="$(arg depth_in)"/>
    <remap from="~output_depth" to="/panda/depth_camera/depth_image/filtered" />
    <remap from="~output_mask" to="/urdf_filtered_mask" />

    <rosparam command="load" file="$(find realtime_urdf_filter)/launch/filter_parameters.yaml"/>
  </node>                 

  <node unless="$(arg nodelet)" 
    pkg="realtime_urdf_filter" type="realtime_urdf_filter" name="$(anon realtime_urdf_filter)" output="screen">
    <remap from="~input_depth" to="$(arg depth_in)"/>
    <remap from="~output_depth" to="/panda/depth_camera/depth_image/filtered" />
    <remap from="~output_mask" to="/urdf_filtered_mask" />

    <rosparam command="load" file="$(find realtime_urdf_filter)/launch/filter_parameters.yaml"/>
  </node>                 

  <!-- Load an example URDF -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find franka_description)/robots/panda_arm_hand.urdf.xacro'"/>
  
  <!-- Produce Point Cloud -->
  
  <node pkg="nodelet" type="nodelet" args="manager" name="nodelet_manager" output="screen"/>
  
  <include file="$(find mask_rcnn_ros)/examples/adapted.launch"> <!-- start anti-self filter for camera image -->
    <arg name="color_in" value="$(arg color_in)"/>
  </include>
  
  <node pkg="realtime_urdf_filter" name="nanifier" type="nanify.py" args="$(arg depth_in) $(arg depth_camera_info) $(arg depth_scale)" output="screen"> 
    <rosparam command="load" file="$(find realtime_urdf_filter)/launch/filter_parameters.yaml"/>
  </node>
  
  <node pkg="nodelet" type="nodelet" name="cloudify" args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager">
    <remap from="depth_registered/image_rect" to="panda/depth_camera/depth_image/filtered/image"/> <!-- image input -->
    <remap from="rgb/image_rect_color" to="/panda/depth_camera/image/filtered/seg"/> <!-- image input -->
    <remap from="depth_registered/points" to="panda/depth_camera/depth_image/filtered/points"/> <!-- pointcloud output -->
    <remap from="rgb/camera_info" to="/panda/depth_camera/depth_image/filtered/camera_info"/> <!-- camera info -->
  </node>

<!--
  <node name="robot_state_publisher_urdf_filter" pkg="robot_state_publisher" type="state_publisher">
    <param name="tf_prefix" value=""/>
  </node>
-->
</launch>

